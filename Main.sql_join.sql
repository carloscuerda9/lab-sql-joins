USE SAKILA;

-- List the number of films per category.
SELECT film_category.category_id, COUNT(film.film_id) AS number_of_films
FROM film_category
JOIN film ON film_category.film_id = film.film_id
GROUP BY film_category.category_id
ORDER BY number_of_films DESC;

-- Retrieve the store ID, city, and country for each store.
SELECT store_id, city, country 
FROM sakila.store 
JOIN sakila.address ON sakila.store.address_id = sakila.address.address_id 
JOIN sakila.city ON sakila.address.city_id = sakila.city.city_id 
JOIN sakila.country ON sakila.city.country_id = sakila.country.country_id ;

-- Calculate the total revenue generated by each store in dollars.
SELECT
    store.store_id,
    SUM(payment.amount) AS total_revenue
FROM
    staff
JOIN
    store ON staff.store_id = store.store_id
JOIN
    payment ON staff.staff_id = payment.staff_id
GROUP BY
    store.store_id;
 
 SELECT * FROM payment;
 
SELECT staff_id, SUM(amount) AS total_revenue
FROM sakila.payment
GROUP BY staff_id;

-- Determine the average running time of films for each category.
SELECT
    category.category_id,
    category.name AS category_name,
    AVG(film.length) AS average_running_time
FROM
    category
JOIN
    film_category ON category.category_id = film_category.category_id
JOIN
    film ON film_category.film_id = film.film_id
GROUP BY
    category.category_id, category.name;

-- Identify the film categories with the longest average running time.
SELECT
    category.category_id,
    category.name AS category_name,
    AVG(film.length) AS average_running_time
FROM
    category
JOIN
    film_category ON category.category_id = film_category.category_id
JOIN
    film ON film_category.film_id = film.film_id
GROUP BY
    category.category_id, category.name
ORDER BY
    average_running_time DESC;

-- Display the top 10 most frequently rented movies in descending order.
SELECT
    film.film_id,
    film.title AS movie_title,
    COUNT(rental.rental_id) AS rental_count
FROM
    film
JOIN
    inventory ON film.film_id = inventory.film_id
JOIN
    rental ON inventory.inventory_id = rental.inventory_id
GROUP BY
    film.film_id, film.title
ORDER BY
    rental_count DESC
LIMIT 10;

-- Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT
    film.title AS movie_title,
    store.store_id,
    COUNT(rental.rental_id) AS rental_count
FROM
    film
JOIN
    inventory ON film.film_id = inventory.film_id
JOIN
    rental ON inventory.inventory_id = rental.inventory_id
JOIN
    store ON inventory.store_id = store.store_id
WHERE
    film.title = 'Academy Dinosaur' AND store.store_id = 1
GROUP BY
    film.title, store.store_id;


